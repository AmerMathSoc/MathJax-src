import { CommonWrapper, CommonWrapperClass, CommonWrapperConstructor } from '../Wrapper.js';
import { CommonWrapperFactory } from '../WrapperFactory.js';
import { CharOptions, VariantData, DelimiterData, FontData, FontDataClass } from '../FontData.js';
import { CommonOutputJax } from '../../common.js';
import { CommonMtr } from './mtr.js';
export type TableData = {
    H: number[];
    D: number[];
    W: number[];
    NH: number[];
    ND: number[];
    L: number;
};
export type ColumnWidths = (string | number | null)[];
export declare let BREAK_BELOW: number;
export interface CommonMtable<N, T, D, JX extends CommonOutputJax<N, T, D, WW, WF, WC, CC, VV, DD, FD, FC>, WW extends CommonWrapper<N, T, D, JX, WW, WF, WC, CC, VV, DD, FD, FC>, WF extends CommonWrapperFactory<N, T, D, JX, WW, WF, WC, CC, VV, DD, FD, FC>, WC extends CommonWrapperClass<N, T, D, JX, WW, WF, WC, CC, VV, DD, FD, FC>, CC extends CharOptions, VV extends VariantData<CC>, DD extends DelimiterData, FD extends FontData<CC, VV, DD>, FC extends FontDataClass<CC, VV, DD>, R extends CommonMtr<N, T, D, JX, WW, WF, WC, CC, VV, DD, FD, FC>> extends CommonWrapper<N, T, D, JX, WW, WF, WC, CC, VV, DD, FD, FC> {
    numCols: number;
    numRows: number;
    hasLabels: boolean;
    isTop: boolean;
    container: WW;
    containerI: number;
    frame: boolean;
    fframe: boolean;
    fLine: number;
    fSpace: number[];
    cSpace: number[];
    rSpace: number[];
    cLines: number[];
    rLines: number[];
    cWidths: (number | string)[];
    data: TableData;
    pwidthCells: [WW, number][];
    pWidth: number;
    readonly tableRows: R[];
    findContainer(): void;
    getPercentageWidth(): void;
    stretchRows(): void;
    stretchColumns(): void;
    stretchColumn(i: number, W: number): void;
    breakColumn(i: number, W: number): void;
    getTableData(): TableData;
    updateHDW(cell: WW, i: number, j: number, align: string, H: number[], D: number[], W: number[], M: number): number;
    extendHD(i: number, H: number[], D: number[], M: number): void;
    recordPWidthCell(cell: WW, i: number): void;
    setColumnPWidths(): void;
    getBBoxHD(height: number): number[];
    getBBoxLR(): number[];
    getPadAlignShift(side: string): [number, string, number];
    getWidth(): number;
    adjustWideTable(): void;
    naturalWidth(): number;
    getEqualRowHeight(): number;
    getComputedWidths(): number[];
    getColumnWidths(): ColumnWidths;
    getEqualColumns(width: string): ColumnWidths;
    getColumnWidthsAuto(swidths: string[]): ColumnWidths;
    getColumnWidthsPercent(swidths: string[]): ColumnWidths;
    getColumnWidthsFixed(swidths: string[], width: number): ColumnWidths;
    adjustColumnWidths(width: number): void;
    getVerticalPosition(i: number, align: string): number;
    getFrameSpacing(): number[];
    getEmHalfSpacing(fspace: number[], space: number[], scale?: number): string[];
    getRowHalfSpacing(): number[];
    getColumnHalfSpacing(): number[];
    getAlignmentRow(): [string, number | null];
    getColumnAttributes(name: string, i?: number): string[];
    getRowAttributes(name: string, i?: number): string[];
    getAttributeArray(name: string): string[];
    addEm(list: number[], n?: number): string[];
    convertLengths(list: string[]): number[];
}
export interface CommonMtableClass<N, T, D, JX extends CommonOutputJax<N, T, D, WW, WF, WC, CC, VV, DD, FD, FC>, WW extends CommonWrapper<N, T, D, JX, WW, WF, WC, CC, VV, DD, FD, FC>, WF extends CommonWrapperFactory<N, T, D, JX, WW, WF, WC, CC, VV, DD, FD, FC>, WC extends CommonWrapperClass<N, T, D, JX, WW, WF, WC, CC, VV, DD, FD, FC>, CC extends CharOptions, VV extends VariantData<CC>, DD extends DelimiterData, FD extends FontData<CC, VV, DD>, FC extends FontDataClass<CC, VV, DD>> extends CommonWrapperClass<N, T, D, JX, WW, WF, WC, CC, VV, DD, FD, FC> {
}
export declare function CommonMtableMixin<N, T, D, JX extends CommonOutputJax<N, T, D, WW, WF, WC, CC, VV, DD, FD, FC>, WW extends CommonWrapper<N, T, D, JX, WW, WF, WC, CC, VV, DD, FD, FC>, WF extends CommonWrapperFactory<N, T, D, JX, WW, WF, WC, CC, VV, DD, FD, FC>, WC extends CommonWrapperClass<N, T, D, JX, WW, WF, WC, CC, VV, DD, FD, FC>, CC extends CharOptions, VV extends VariantData<CC>, DD extends DelimiterData, FD extends FontData<CC, VV, DD>, FC extends FontDataClass<CC, VV, DD>, R extends CommonMtr<N, T, D, JX, WW, WF, WC, CC, VV, DD, FD, FC>, B extends CommonWrapperClass<N, T, D, JX, WW, WF, WC, CC, VV, DD, FD, FC>>(Base: CommonWrapperConstructor<N, T, D, JX, WW, WF, WC, CC, VV, DD, FD, FC>): B;
