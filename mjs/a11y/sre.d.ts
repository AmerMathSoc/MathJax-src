import * as Api from '#sre/common/system.js';
import { ClearspeakPreferences } from '#sre/speech_rules/clearspeak_preferences.js';
import { Highlighter } from '#sre/highlighter/highlighter.js';
import * as HighlighterFactory from '#sre/highlighter/highlighter_factory.js';
import { SemanticNode } from '#sre/semantic_tree/semantic_node.js';
import { parseInput } from '#sre/common/dom_util.js';
export { semanticMathmlNode } from '#sre/enrich_mathml/enrich.js';
export type highlighter = Highlighter;
export type semanticNode = SemanticNode;
export declare const locales: Map<string, string>;
export declare const sreReady: typeof Api.engineReady;
export declare const setupEngine: typeof Api.setupEngine;
export declare const engineSetup: typeof Api.engineSetup;
export declare const toEnriched: typeof Api.toEnriched;
export declare const toSpeech: typeof Api.toSpeech;
export declare const clearspeakPreferences: typeof ClearspeakPreferences;
export declare const getHighlighter: typeof HighlighterFactory.highlighter;
export declare const updateHighlighter: typeof HighlighterFactory.update;
export declare const parseDOM: typeof parseInput;
export declare const preloadLocales: (_locale: string) => Promise<string>;
