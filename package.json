{
  "name": "mathjax-full",
  "version": "4.0.0-beta.4",
  "description": "Beautiful and accessible math in all browsers. MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all browsers and in server-side node applications. This package includes the source code as well as the packaged components.",
  "keywords": [
    "MathJax",
    "math",
    "svg",
    "HTML",
    "MathML",
    "TeX",
    "AsciiMath"
  ],
  "license": "Apache-2.0",
  "maintainers": [
    "MathJax Consortium <info@mathjax.org> (http://www.mathjax.org)"
  ],
  "bugs": {
    "url": "http://github.com/mathjax/MathJax/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mathjax/Mathjax-src/"
  },
  "type": "module",
  "main": "components/mjs/node-main/node-main.js",
  "exports": {
    ".": {
      "import": "./bundle/node-main.mjs",
      "require": "./bundle/node-main.cjs"
    },
    "./source": {
      "import": "./components/mjs/node-main/node-main.mjs",
      "require": "./components/cjs/node-main/node-main.cjs"
    },
    "./js/*": {
      "import": "./mjs/*",
      "require": "./cjs/*"
    },
    "./components/src/*": {
      "import": "./components/mjs/*",
      "require": "./components/cjs/*"
    },
    "./es5/*": "./bundle/*",
    "./*": "./*"
  },
  "imports": {
    "#js/*": "mathjax-full/mjs/*",
    "#source/*": "mathjax-full/components/mjs/*",
    "#root/*": "mathjax-full/mjs/components/mjs/*",
    "#menu/*": "mj-context-menu/js/*",
    "#sre/*": "speech-rule-engine/js/*",
    "#mhchem/*": "mhchemparser/esm/*",
    "#default-font/*": "mathjax-modern-font/mjs/*"
  },
  "files": [
    "/bundle",
    "/cjs",
    "/mjs",
    "/ts",
    "/components",
    "LICENSE",
    "README.md",
    "CONTRIBUTING.md",
    "tsconfig*"
  ],
  "scripts": {
    "=============================================================================== clean": "",
    "clean:dir": "clean() { pnpm -s log:single \"Removing $1 directory\"; pnpm rimraf $1; }; clean",
    "clean:lib": "clean() { pnpm -s log:single \"Removing $1 components\"; pnpm rimraf -g components/$1'/**/lib'; }; clean",
    "clean:mod": "clean() { pnpm -s log:comp \"Removing $1 module\"; pnpm -s clean:dir $1 && pnpm -s clean:lib $1; }; clean",
    "clean": "pnpm -s log:comp \"Removing all modules\"; pnpm -s clean:mod cjs && pnpm -s clean:mod mjs && pnpm -s clean:dir bundle",
    "clean:cjs:components": "pnpm -s log:single \"Removing cjs components\" pnpm rimraf components/cjs",
    "=============================================================================== copy": "",
    "copy:mj2": "copy() { pnpm -s log:single 'Copying legacy code AsciiMath'; pnpm copyfiles -u 1 'ts/input/asciimath/legacy/**/*' $1; }; copy",
    "copy:mml3": "copy() { pnpm -s log:single 'Copying legacy code MathML3'; pnpm copyfiles -u 1 ts/input/mathml/mml3/mml3.sef.json $1; }; copy",
    "copy:assets": "pnpm -s log:comp 'Copying assets'; copy() { pnpm -s copy:mj2 $1 && pnpm -s copy:mml3 $1; }; copy",
    "copy:pkg": "copy() { pnpm -s log:single \"Copying package.json to $1\"; pnpm copyfiles -u 2 components/bin/package.json $1; }; copy",
    "=============================================================================== src": "",
    "=============================================================================== compile": "",
    "_cjs:pkg": "pnpm -s copy:pkg cjs",
    "_mjs:pkg": "echo ",
    "_pre_compile": "pre() { pnpm clean:dir $1; }; pre",
    "_compile": "comp() { pnpm tsc --project tsconfig/$1.json; }; comp",
    "_post_compile": "post() { pnpm -s copy:mj2 $1 && pnpm -s copy:mml3 $1 && pnpm -s _$1:pkg; }; post",
    "_compile_": "comp() { pnpm _pre_compile $1; pnpm _compile $1; pnpm _post_compile $1; }; comp",
    "compile-cjs": "pnpm -s _compile_ cjs && pnpm src_cjs",
    "compile-mjs": "pnpm -s _compile_ mjs",
    "compile": "pnpm compile-mjs",
    "=============================================================================== components": "",
    "make-one": "make() { components/bin/makeAll --no-subdirs $3 $4 --$2 components/$2/$1; }; make",
    "_bundle:pkg": "pkg() { echo '{\n  \"type\": \"commonjs\"\n}' > bundle$1/package.json; }; pkg",
    "_bundle--build:pkg": "echo HELLO",
    "_pre_make": "pre() { pnpm clean:dir bundle$2 && pnpm clean:lib $1; }; pre",
    "_make": "make() { components/bin/makeAll --$1 --terse $2 $3 components/$1; }; make",
    "_make_": "m() { pnpm _pre_make $1 $2 && pnpm _make $1 $3 $4 && pnpm _bundle$4:pkg $2; }; m",
    "make-cjs-components": "pnpm _make_ cjs -cjs --bundle-cjs",
    "make-mjs-components": "pnpm -s _make_ mjs",
    "make-components": "pnpm -s make-mjs-components",
    "=============================================================================== build": "",
    "pre_build": "echo 1; echo 'Compiling typescript files'",
    "_build": "echo 2; echo 'Compiling typescript files'; build() { pnpm compile-$1 && echo && pnpm make-$1-components $2; }; build",
    "_build_": "echo 3; b() { echo '============='; echo Building $1:; echo '============='; pnpm _build $1 $2; }; b",
    "build-cjs": "echo 4; pnpm -s _build_ cjs --build",
    "build-mjs": "echo 5; pnpm -s _build_ mjs",
    "build": "echo 6; pnpm -s build-mjs",
    "build-all": "echo 7; pnpm -s build-mjs ; echo ; pnpm -s build-cjs",
    "=============================================================================== mml3": "",
    "mml3-xslt": "pnpm -s premake-mml3-xslt && pnpm -s make-mml3-xslt && pnpm -s postmake-mml3-xslt",
    "premake-mml3-xslt": "grep '^\\s*\\(<\\|or\\|xmlns\\|excl\\|\">\\)' ts/input/mathml/mml3/mml3.ts > /tmp/mml3.xsl",
    "make-mml3-xslt": "pnpm xslt3 -t -xsl:/tmp/mml3.xsl -export:ts/input/mathml/mml3/mml3.sef.json -nogo",
    "postmake-mml3-xslt": "pnpm rimraf /tmp/mml3.xsl",
    "=============================================================================== install": "",
    "link:full": "node components/bin/link-full",
    "use-cjs": "echo '{\n  \"extends\": \"./tsconfig/cjs.json\"\n}' > tsconfig.json",
    "use-mjs": "echo '{\n  \"extends\": \"./tsconfig/mjs.json\"\n}' > tsconfig.json",
    "=============================================================================== Aux": "",
    "log:single": "log() { echo \\\\e[33m$1\\\\e[0m; }; log",
    "log:header": "log() { echo '============='; echo $1; echo '============='; }; log",
    "log:comp": "log() { echo \\\\e[32m$1\\\\e[0m; }; log",
    "=============================================================================== CJS": "",
    "compile:cjs:components": "pnpm -s log:single 'Compiling component files'; pnpm tsc --project tsconfig/components.json",
    "copy:cjs:components": "pnpm copyfiles -u 2 -e 'components/mjs/**/*.js' 'components/mjs/**/*' components/cjs",
    "make:cjs:components": "make() { pnpm -s log:single 'Making cjs components'; components/bin/makeAll --cjs --terse --bundle-cjs $1 components/cjs; }; make",
    "finalize:cjs:components": "pnpm -s log:comp 'Finalize cjs components'; pnpm -s copy:cjs:components && pnpm -s copy:pkg components/cjs && pnpm -s clean:lib cjs",
    "finalize:cjs:bundle": "pnpm -s log:single 'Finalize cjs bundle'; echo '{\n  \"type\": \"commonjs\"\n}' > bundle-cjs/package.json",
    "build:cjs:components:src": "pnpm -s log:comp 'Building cjs components sources'; pnpm clean:cjs:components && pnpm compile:cjs:components && pnpm finalize:cjs:components",
    "build:cjs:components": "pnpm -s log:comp 'Building cjs components'; pnpm -s build:cjs:components:src; pnpm clean:dir bundle-cjs; pnpm -s make:cjs:components --build",
    "compile:cjs": "pnpm -s log:single 'Compiling cjs typescript files' && pnpm tsc --project tsconfig/cjs.json",
    "build:cjs:src": "pnpm -s link:full && pnpm clean:dir cjs && pnpm -s compile:cjs && pnpm -s copy:assets cjs && pnpm -s copy:pkg cjs",
    "build:cjs": "pnpm -s log:header 'Building cjs'; pnpm -s build:cjs:src && pnpm -s build:cjs:components",
    "=============================================================================== MJS": "",
    "make:mjs:components": " pnpm -s log:single 'Making cjs components'; components/bin/makeAll --mjs --terse components/mjs",
    "clean:mjs:components": "pnpm clean:lib mjs",
    "clean:mjs:bundle": "pnpm clean:dir bundle",
    "clean:mjs:dest": "pnpm clean:dir mjs",
    "finalize:mjs:bundle": "pnpm -s log:single 'Finalize MJS bundle'; echo '{\n  \"type\": \"commonjs\"\n}' > bundle/package.json;",
    "build:mjs:components": "pnpm -s log:comp 'Compiling MJS component files'; pnpm clean:mjs:components; pnpm clean:mjs:bundle; pnpm make:mjs:components; pnpm finalize:mjs:bundle",
    "compile:mjs": "pnpm -s log:comp 'Compiling MJS typescript files' && pnpm tsc --project tsconfig/mjs.json",
    "build:mjs:src": "pnpm -s link:full && pnpm -s clean:mjs:dest && pnpm -s compile:mjs && pnpm -s copy:assets mjs",
    "build:mjs": "pnpm -s log:header 'Building mjs'; pnpm -s build:mjs:src && pnpm -s build:mjs:components"
  },
  "devDependencies": {
    "copyfiles": "^2.4.1",
    "diff": "^5.1.0",
    "rimraf": "^5.0.5",
    "tape": "^5.7.2",
    "terser-webpack-plugin": "^5.3.9",
    "tslint": "^6.1.3",
    "tslint-jsdoc-rules": "^0.2.0",
    "tslint-unix-formatter": "^0.2.0",
    "typescript": "^5.2.2",
    "typescript-tools": "^0.3.1",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4",
    "xslt3": "^2.6.0"
  },
  "dependencies": {
    "mathjax-modern-font": "^4.0.0-beta.4",
    "mhchemparser": "^4.2.1",
    "mj-context-menu": "^0.9.1",
    "speech-rule-engine": "^4.1.0-beta.7"
  }
}
